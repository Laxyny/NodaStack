name: .NET Core Desktop

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: write
  pull-requests: read

jobs:
  build:
    strategy:
      matrix:
        configuration: [Debug, Release]

    runs-on: windows-latest

    env:
      Solution_Name: NodaStack.sln

    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Install .NET Core
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 9.0.x

    - name: Setup MSBuild.exe
      uses: microsoft/setup-msbuild@v2

    - name: Restore dependencies
      run: dotnet restore $env:Solution_Name

    - name: Build the application
      run: dotnet build $env:Solution_Name --configuration $env:Configuration --no-restore
      env:
        Configuration: ${{ matrix.configuration }}

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: NodaStack-${{ matrix.configuration }}
        path: bin/${{ matrix.configuration }}/net9.0-windows/
        retention-days: 90

    - name: Create release package (Release only)
      if: matrix.configuration == 'Release'
      run: |
        mkdir release
        xcopy "bin\Release\net9.0-windows\*" "release\" /E /H /Y
        7z a NodaStack-Release.zip release\*
      
    - name: Upload release package
      if: matrix.configuration == 'Release'
      uses: actions/upload-artifact@v4
      with:
        name: NodaStack-Release-Package
        path: NodaStack-Release.zip

  release:
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
      
    - name: Generate version
      id: version
      run: |
        # Get current date for version
        VERSION="v$(date +'%Y.%m.%d')-build.${{ github.run_number }}"
        echo "version=$VERSION" >> $GITHUB_OUTPUT
        echo "tag_name=$VERSION" >> $GITHUB_OUTPUT
        
    - name: Download Release Package
      uses: actions/download-artifact@v4
      with:
        name: NodaStack-Release-Package
        path: ./release-assets/
        
    - name: Create Release
      uses: softprops/action-gh-release@v2
      with:
        tag_name: ${{ steps.version.outputs.tag_name }}
        name: NodaStack ${{ steps.version.outputs.version }}
        body: |
          ## NodaStack Release ${{ steps.version.outputs.version }}
          
          ### Installation
          1. Download NodaStack-Release.zip
          2. Extract the archive
          3. Run NodaStack.exe
          
          ### Requirements
          - Windows 10/11 (x64)
          - .NET 9 Runtime (automatically installed if needed)
          - Docker Desktop (for developers)
          
          ### Features
          - Modern graphical interface
          - Apache, PHP, MySQL management
          - Docker containers integration
          - Visual status indicators
          - Real-time logging
          
          ### Technical Details
          - Build: ${{ github.run_number }}
          - Commit: ${{ github.sha }}
          - Branch: ${{ github.ref_name }}
          
          **Recommended download:** NodaStack-Release.zip
        files: ./release-assets/NodaStack-Release.zip
        draft: false
        prerelease: false
        generate_release_notes: true
        make_latest: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}